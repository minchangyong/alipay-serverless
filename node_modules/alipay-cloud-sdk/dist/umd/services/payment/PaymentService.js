(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "../../constants/Api", "../../utils/checkParams", "../../constants/PayScene"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    const Api_1 = require("../../constants/Api");
    const checkParams_1 = require("../../utils/checkParams");
    const PayScene_1 = require("../../constants/PayScene");
    function PaymentService(httpRequest) {
        return {
            async pay(params) {
                checkParams_1.checkParams(params, ['outTradeNo', 'authCode', 'subject', 'totalAmount']);
                const newParams = { ...params };
                if (!params.scene) {
                    newParams.scene = PayScene_1.PayScene.BAR_CODE;
                }
                return await httpRequest.execute({
                    method: Api_1.Api.payment.pay,
                    params: newParams,
                });
            },
            async create(params) {
                checkParams_1.checkParams(params, ['outTradeNo', 'totalAmount', 'subject', 'buyerId']);
                return await httpRequest.execute({
                    method: Api_1.Api.payment.create,
                    params,
                });
            },
            async query(params) {
                checkParams_1.checkParams(params, ['outTradeNo']);
                return await httpRequest.execute({
                    method: Api_1.Api.payment.query,
                    params,
                });
            },
            async refund(params) {
                checkParams_1.checkParams(params, ['outTradeNo', 'refundAmount']);
                return await httpRequest.execute({
                    method: Api_1.Api.payment.refund,
                    params,
                });
            },
            async close(params) {
                checkParams_1.checkParams(params, ['outTradeNo']);
                return await httpRequest.execute({
                    method: Api_1.Api.payment.close,
                    params,
                });
            },
            async cancel(params) {
                checkParams_1.checkParams(params, ['outTradeNo']);
                return await httpRequest.execute({
                    method: Api_1.Api.payment.cancel,
                    params,
                });
            },
            async getBillUrl(params) {
                checkParams_1.checkParams(params, ['billType', 'billDate']);
                return await httpRequest.execute({
                    method: Api_1.Api.payment.getBillUrl,
                    params,
                });
            }
        };
    }
    exports.PaymentService = PaymentService;
});
