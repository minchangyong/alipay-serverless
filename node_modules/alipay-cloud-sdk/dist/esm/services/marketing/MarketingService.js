import * as tslib_1 from "tslib";
import { marketing } from '../../pipe/marketing';
import { Api } from '../../constants/Api';
import { checkParams } from '../../utils/checkParams';
import { FeatureNotSupportError } from '../../errors/FeatureNotSupportError';
export function MarketingService(httpRequest) {
    return {
        createTemplate: function (params) {
            return tslib_1.__awaiter(this, void 0, void 0, function () {
                var result;
                return tslib_1.__generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: throw FeatureNotSupportError();
                        case 1:
                            result = _a.sent();
                            return [2, marketing.templateResponse(result)];
                    }
                });
            });
        },
        updateTemplate: function (params) {
            return tslib_1.__awaiter(this, void 0, void 0, function () {
                var result;
                return tslib_1.__generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: throw FeatureNotSupportError();
                        case 1:
                            result = _a.sent();
                            return [2, marketing.templateResponse(result)];
                    }
                });
            });
        },
        updateInstance: function (params) {
            return tslib_1.__awaiter(this, void 0, void 0, function () {
                var result;
                return tslib_1.__generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: throw FeatureNotSupportError();
                        case 1:
                            result = _a.sent();
                            return [2, marketing.instanceResponse(result)];
                    }
                });
            });
        },
        addInstance: function (params) {
            return tslib_1.__awaiter(this, void 0, void 0, function () {
                var result;
                return tslib_1.__generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: throw FeatureNotSupportError();
                        case 1:
                            result = _a.sent();
                            return [2, marketing.instanceResponse(result)];
                    }
                });
            });
        },
        triggerCash: function (params) {
            return tslib_1.__awaiter(this, void 0, void 0, function () {
                var result;
                return tslib_1.__generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: throw FeatureNotSupportError();
                        case 1:
                            result = _a.sent();
                            return [2, result];
                    }
                });
            });
        },
        triggerDrawCamp: function (params) {
            return tslib_1.__awaiter(this, void 0, void 0, function () {
                var result;
                return tslib_1.__generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            checkParams(params, ['campId']);
                            return [4, httpRequest.execute({
                                    method: Api.marketing.triggerDrawCamp,
                                    params: params,
                                })];
                        case 1:
                            result = _a.sent();
                            return [2, result];
                    }
                });
            });
        }
    };
}
