import * as tslib_1 from "tslib";
import { get } from './safeAccess';
import { CloudSDKError } from '../errors/CloudSDKError';
import { ErrorCode } from '../constants/Error';
export function convertRequest(req, config) {
    var newReq = tslib_1.__assign({}, req);
    var notify = get(config, function (config) { return config.notify; }, null);
    var env = get(config, function (config) { return config.env; }, null);
    newReq.params.$config = {};
    if (notify) {
        if (!notify.url) {
            throw new CloudSDKError({
                errCode: ErrorCode.INVALID_PARAM,
                errMsg: '初始化配置 notify.url 必须填写消息回调地址，比如：https://<your_host>/api',
            });
        }
        newReq.params.$config.notify = tslib_1.__assign({}, notify);
    }
    if (env) {
        newReq.params.$config.env = env;
    }
    return newReq;
}
export var request = function (serverless, config) {
    if (config === void 0) { config = {}; }
    return {
        execute: function (req) {
            var newReq = convertRequest(req, config);
            return serverless.function.invoke('alipay-openapi', newReq);
        }
    };
};
