import { CommonModel } from './OpenApiModel';
export declare namespace BaasModel {
    import Response = CommonModel.Response;
    type Env = 'prod';
    interface Request {
        execute<T, R extends Response>(req: FunctionRequest<T>): Promise<FunctionResponse<R>>;
    }
    interface NotifyConfig {
        url: string;
    }
    interface Config {
        notify?: NotifyConfig;
        env?: Env;
    }
    interface FunctionResponse<R> {
        requestId: string;
        success: boolean;
        result: R;
    }
    interface BaseParams {
        $config?: {
            notify?: {
                url?: string;
            };
            env?: Env;
        };
    }
    interface FunctionRequest<T> {
        method: string;
        params: T & BaseParams;
    }
    interface ServerlessFunction {
        invoke<T, R>(functionName: string, request: FunctionRequest<T>): Promise<FunctionResponse<R>>;
    }
    interface Serverless {
        function: ServerlessFunction;
    }
}
